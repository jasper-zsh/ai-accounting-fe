/* tslint:disable */
/* eslint-disable */
/**
 * AI Accounting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Category,
} from '../models/index';
import {
    CategoryFromJSON,
    CategoryToJSON,
} from '../models/index';

export interface CategoriesPostRequest {
    body?: object;
}

/**
 * CategoryApi - interface
 * 
 * @export
 * @interface CategoryApiInterface
 */
export interface CategoryApiInterface {
    /**
     * 
     * @summary List Categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CategoryApiInterface
     */
    categoriesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Category>>>;

    /**
     * 
     * List Categories
     */
    categoriesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Category>>;

    /**
     * 
     * @summary Create Category
     * @param {object} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CategoryApiInterface
     */
    categoriesPostRaw(requestParameters: CategoriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Category>>;

    /**
     * 
     * Create Category
     */
    categoriesPost(requestParameters: CategoriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Category>;

}

/**
 * 
 */
export class CategoryApi extends runtime.BaseAPI implements CategoryApiInterface {

    /**
     * 
     * List Categories
     */
    async categoriesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Category>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CategoryFromJSON));
    }

    /**
     * 
     * List Categories
     */
    async categoriesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Category>> {
        const response = await this.categoriesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 
     * Create Category
     */
    async categoriesPostRaw(requestParameters: CategoriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Category>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/categories`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CategoryFromJSON(jsonValue));
    }

    /**
     * 
     * Create Category
     */
    async categoriesPost(requestParameters: CategoriesPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Category> {
        const response = await this.categoriesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
