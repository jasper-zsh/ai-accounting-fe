/* tslint:disable */
/* eslint-disable */
/**
 * AI Accounting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AiCommandRequest,
  AiVoiceRequest,
  Transaction,
} from '../models/index';
import {
    AiCommandRequestFromJSON,
    AiCommandRequestToJSON,
    AiVoiceRequestFromJSON,
    AiVoiceRequestToJSON,
    TransactionFromJSON,
    TransactionToJSON,
} from '../models/index';

export interface AiCommandOperationRequest {
    aiCommandRequest?: AiCommandRequest;
}

export interface AiVoiceOperationRequest {
    aiVoiceRequest?: AiVoiceRequest;
}

/**
 * AIApi - interface
 * 
 * @export
 * @interface AIApiInterface
 */
export interface AIApiInterface {
    /**
     * 
     * @summary AI Command
     * @param {AiCommandRequest} [aiCommandRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AIApiInterface
     */
    aiCommandRaw(requestParameters: AiCommandOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Transaction>>;

    /**
     * 
     * AI Command
     */
    aiCommand(requestParameters: AiCommandOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Transaction>;

    /**
     * 
     * @summary AI Voice
     * @param {AiVoiceRequest} [aiVoiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AIApiInterface
     */
    aiVoiceRaw(requestParameters: AiVoiceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Transaction>>;

    /**
     * 
     * AI Voice
     */
    aiVoice(requestParameters: AiVoiceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Transaction>;

}

/**
 * 
 */
export class AIApi extends runtime.BaseAPI implements AIApiInterface {

    /**
     * 
     * AI Command
     */
    async aiCommandRaw(requestParameters: AiCommandOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Transaction>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/ai/command`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AiCommandRequestToJSON(requestParameters.aiCommandRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionFromJSON(jsonValue));
    }

    /**
     * 
     * AI Command
     */
    async aiCommand(requestParameters: AiCommandOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Transaction> {
        const response = await this.aiCommandRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * AI Voice
     */
    async aiVoiceRaw(requestParameters: AiVoiceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Transaction>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/ai/voice`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AiVoiceRequestToJSON(requestParameters.aiVoiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TransactionFromJSON(jsonValue));
    }

    /**
     * 
     * AI Voice
     */
    async aiVoice(requestParameters: AiVoiceOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Transaction> {
        const response = await this.aiVoiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
